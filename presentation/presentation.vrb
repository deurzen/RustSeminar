\frametitle{\underline {\cpp }: Retrieving Window Management Actions \hfill {\footnotesize \currentname }}

    \tbf{3. Retrieve and perform window management actions}

    \begin{itemize}

        \item Example: \textsc{wmCPP}'s mouse event handler:\\[3pt]
\begin{minipage}[t]{.39\linewidth}
\begin{minted}[baselinestretch=1,escapeinside=||,fontsize=\scriptsize]{cpp}
  struct MouseEvent final {
      MouseEventKind kind;
      MouseInput input;
      Option<Window> window;
  };
\end{minted}
\end{minipage}%
\begin{minipage}[t]{.61\linewidth}
\begin{minted}[baselinestretch=1,escapeinside=||,fontsize=\scriptsize]{cpp}
   typedef
     std::unordered_map<MouseInput, MouseAction>
     MouseBindings;
\end{minted}
\end{minipage}

\vspace*{10pt}\begin{minted}[baselinestretch=1,escapeinside=||,fontsize=\scriptsize]{cpp}
  void
  Model::handle_mouse(MouseEvent& event)
  {
      MouseBindings& mb = this->mouse_bindings;
\end{minted}
\begin{minted}[baselinestretch=1,escapeinside=||,fontsize=\scriptsize]{cpp}
      if (mb.count(event.input) > 0)
          mb.at(event.input)(*this, event.window);
  }
\end{minted}

    \end{itemize}

    \vfill

