\frametitle{\underline {\cpp }: Storing Window Management Actions \hfill {\footnotesize \currentname }}

    \tbf{2. Map input to window management actions in a \underline{\cppin{std::unordered_map}}}

    \begin{itemize}

        \item Example: Adding a mouse binding:\\[3pt]
\begin{minted}[baselinestretch=1,escapeinside=||,fontsize=\scriptsize]{cpp}
  let mut mouse_bindings = std::unordered_map::new();
\end{minted}
\begin{minted}[baselinestretch=1,fontsize=\scriptsize]{cpp}
  mouse_bindings.insert(
      MouseInput {
          button: Button::Middle,
          modifiers: {
              let mut modifiers = HashSet::with_capacity(2);
              modifiers.insert(Modifier::Ctrl);
              modifiers.insert(Modifier::Super);
              modifiers
          },
      },
      Box::new(|model: &mut Model, win: Option<Window>| -> bool {
          if let Some(window) = win {
              model.set_floating_window(window);
              true
          }
      })
  );
\end{minted}

    \end{itemize}

    \vfill

